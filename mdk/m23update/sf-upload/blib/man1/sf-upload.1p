.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SF-UPLOAD 1p"
.TH SF-UPLOAD 1p "2008-09-02" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.Sh "is_in_path($prog)"
.IX Subsection "is_in_path($prog)"
Return the pathname of \f(CW$prog\fR, if the program is in the \s-1PATH\s0, or undef
otherwise.
.PP
\&\s-1DEPENDENCY:\s0 file_name_is_absolute
.Sh "file_name_is_absolute($file)"
.IX Subsection "file_name_is_absolute($file)"
Return true, if supplied file name is absolute. This is only necessary
for older perls where File::Spec is not part of the system.
.SH "NAME"
sf\-upload \- batch release of SourceForge projects.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&    sf\-upload \-pr projectname|\-groupid id
\&              \-p packagename|\-packageid id
\&              \-r releasename \-f file
\&          [\-type type] [\-processor processor] [\-user user] [\-password password]
\&          [\-d releasedate]
\&          [\-n notes | \-nf notesfile] [\-c changes | \-cf changesfile]
\&          [\-[no]upload] [\-[no]rc] [\-[no]v] [\-version]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
sf-upload is a script which automates the process of
uploading and releasing a file to SourceForge.
.Sh "\s-1ARGUMENTS\s0"
.IX Subsection "ARGUMENTS"
.IP "\-groupid id" 4
.IX Item "-groupid id"
id of the project, also known as group id (mandatory)
.IP "\-pr|\-project projectname" 4
.IX Item "-pr|-project projectname"
short (unix) name of the project. \fB\s-1NOTE\s0\fR: Do not use this option
anymore, handling of the project name is unreliable. Use \fB\-groupid\fR
instead.
.IP "\-packageid id" 4
.IX Item "-packageid id"
id of the package (mandatory)
.IP "\-p|\-package packagename" 4
.IX Item "-p|-package packagename"
(existing) package name. \fB\s-1NOTE\s0\fR: Do not use this option anymore,
handling of the package name is unreliable. Use \fB\-packageid\fR instead.
.IP "\-r|\-release releasename" 4
.IX Item "-r|-release releasename"
name of new release (usually version number)
.IP "\-f|\-file filename" 4
.IX Item "-f|-file filename"
filename of uploaded package
.IP "\-type type" 4
.IX Item "-type type"
type of uploaded filename (default: guess)
.IP "\-processor processor" 4
.IX Item "-processor processor"
processor type (default: Any)
.IP "\-user user" 4
.IX Item "-user user"
SourceForge user name
.IP "\-password password" 4
.IX Item "-password password"
SourceForge password. Note that the password is only used for the \s-1HTML\s0
pages, but not for the rsync/ssh upload. Use ssh private/public key
authentication for password-less operation there.
.IP "\-n|notes notes" 4
.IX Item "-n|notes notes"
release notes
.IP "\-nf|notesfile notesfile" 4
.IX Item "-nf|notesfile notesfile"
get release notes from named file
.IP "\-c|changes changes" 4
.IX Item "-c|changes changes"
release changes
.IP "\-cf|changesfile changesfile" 4
.IX Item "-cf|changesfile changesfile"
get release changes from named file
.IP "\-[no]upload =item \-[no]ftp =item \-[no]rsync" 4
.IX Item "-[no]upload =item -[no]ftp =item -[no]rsync"
upload/do not upload file (default: \-upload)
(rsync is always used, regardless which of the three options is used)
.IP "\-[no]rc" 4
.IX Item "-[no]rc"
read/do not read rc file (usually ~/.sfuploadrc) (default: \-rc)
.IP "\-[no]v" 4
.IX Item "-[no]v"
be/do not be verbose (default: \-v)
.IP "\-version" 4
.IX Item "-version"
show version and exit
.SH "FILES"
.IX Header "FILES"
.IP "~/.sfuploadrc" 4
.IX Item "~/.sfuploadrc"
You can put configuration options to this file. The format is
.Sp
.Vb 1
\&    key = value
.Ve
.Sp
Allowed keys are: \f(CW\*(C`user\*(C'\fR, \f(CW\*(C`password\*(C'\fR, and \f(CW\*(C`debug\*(C'\fR.
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
LWP::UserAgent, HTML::Parser, HTML::Tree, Crypt::SSLeay
.SH "OSNAMES"
.IX Header "OSNAMES"
only tested on Unix
.SH "SCRIPT CATEGORIES"
.IX Header "SCRIPT CATEGORIES"
???
.SH "EXAMPLE"
.IX Header "EXAMPLE"
You can put the following rule to a perl-styled \f(CW\*(C`Makefile.PL\*(C'\fR:
.PP
.Vb 6
\&  sub MY::postamble {
\&    <<\*(AqEOF\*(Aq;
\&  release: $(DISTVNAME).tar$(SUFFIX)
\&          sf\-upload \-pr unix_name_of_project \-p name_of_package \-f $(DISTVNAME).tar$(SUFFIX)
\&  EOF
\&  }
.Ve
.PP
For a project using \f(CW\*(C`configure\*(C'\fR and \f(CW\*(C`Makefile.in\*(C'\fR, put the following
rule to \f(CW\*(C`Makefile.in\*(C'\fR:
.PP
.Vb 2
\&  release:
\&          sf\-upload \-pr unix_name_of_project \-p name_of_package \-f $(DISTROOT)/$(DISTNAME).tar.gz
.Ve
.PP
Then, releasing a distribution would just be
.PP
.Vb 2
\&  make dist
\&  make release
.Ve
.SH "BUGS"
.IX Header "BUGS"
There's no check whether a release name is already used. This means that
multiple uploads to the same release name will cause creating multiple
different releases.
.PP
It is not possible to have multiple files in one release.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
\&\f(CW\*(C`sf\-upload\*(C'\fR is available from
<http://www.sourceforge.net/projects/sf\-upload>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Slaven Rezic <slaven@rezic.de>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIcpan\-upload\fR\|(1), release, Module::Release.
